package java1.day08;

public class Ex01_객체 {

}


/* 
	객체지향 프로그래밍 : OOP
		- 부품을 먼저 만들고 그 부품들을 하나씩 조립해서 완성문을 만드는 작업
		- 객체를 먼저 각각 만들고 서로 가른 그 객체들을 하나씩 조립/합쳐서 하나의 프로그램을 만드는 작업
		- ex1) 블럭1개 = 객체1개 => 블럭여러개 = 레고완성품
	
	객체란 : 물리적으로 존재하거나 개념적으로 존재하는 것 중 식별 가능한 것
			- 물리적인 존재 : 자동차, 자전거, 책, 사람 등등 => 결론적으로 손에 잡히는 것
			- 개념적인 존재 : 학과, 강의, 주문 등등 => 손에 잡히지 않는 형태
		 	이 모든 것을 객체로 만들 수 있다. 
		- 속성/필드와 동작/행동/메소드
			속성/필드/상태	  	: 이름, 나이, 색깔, 속도
			동작/메소드/행동	: 웃다, 먹다, 달린다, 멈춘다
		- 객체 모델링 : 현실세계의 객체를 컴퓨터로 옮기는 과정 [ 필드, 메소드 만드는 과정 ] 
	
	객체의 상호작용 
	
		사람객체1							붕어빵객체1
			이름 : 강호동						함량 : 밀가루0.5g
			행동 : 먹다						구매자 : 강호동
			
	 	사람객체2							붕어빵객체2
	 		이름 : 유재석						함량 : 밀가루 0.55g
	 		행동 : 먹다 						구매자 : 유재석
		
			- 서로 다른 객체들은 메소드/함수를 통해 사로 데이터를 주고 받는다!!
	
	객체지향 프로그래밍 특징
		1. 캡슐화		: 필드, 동작 하나로 묶어서 다른 객체로 감추는 것
		2. 상속		: 상위 객체로 부터 필드, 동작 물려받아 하위 객체가 사용할 수 있는것
		3. 다형성 	: 사용방법은 같지만 실행 결과는 다양하게 나오는 성질
		 
		
*/